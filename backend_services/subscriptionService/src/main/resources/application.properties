# Server configuration
server.port=${SERVER_PORT:8084}

# Database configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA configuration
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Consul import
spring.config.import=optional:consul:
spring.application.name=${SPRING_APPLICATION_NAME:subscription-service}

# Consul configuration
spring.cloud.consul.host=${SPRING_CLOUD_CONSUL_HOST:consul}
spring.cloud.consul.port=${SPRING_CLOUD_CONSUL_PORT:8500}
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.service-name=${SPRING_CLOUD_CONSUL_SERVICE_NAME:subscription-service}

# Expose the health endpoint over HTTP
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
spring.cloud.consul.discovery.health-check-interval=${SPRING_CLOUD_CONSUL_HEALTH_CHECK_INTERVAL:30s}
spring.cloud.consul.config.failFast=false

# setting service to be discoverable using IP address
spring.cloud.consul.discovery.prefer-ip-address=true

# Stripe configuration
stripe.sk=${STRIPE_SK}

# Security
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8081/realms/onlypans
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8081/realms/onlypans/protocol/openid-connect/certs
logging.level.feign=DEBUG
logging.level.onlypans.subscriptionService.clients.UserServiceClient=DEBUG