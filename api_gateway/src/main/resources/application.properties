server.port=${SERVER_PORT:8081}
spring.application.name=${APPLICATION_NAME:gateway-service}

# Security
spring.main.allow-bean-definition-overriding=true
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.boot.autoconfigure.security=DEBUG

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_LIVE_URL:http://localhost:8081/realms/onlypans}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8081/realms/onlypans/protocol/openid-connect/certs

# Consul Configuration
spring.cloud.consul.discovery.service-name=${CONSUL_SERVICE_NAME:gateway-service}
spring.cloud.consul.discovery.register=${CONSUL_DISCOVERY_REGISTER:true}
spring.cloud.consul.discovery.prefer-ip-address=${CONSUL_DISCOVERY_PREFER_IP_ADDRESS:true}
spring.cloud.consul.host=${CONSUL_HOST:http://consul}
spring.cloud.consul.port=${CONSUL_PORT:8500}
management.endpoints.web.exposure.include=health,info,gateway
management.endpoint.gateway.enabled=true
management.endpoint.health.show-details=always
spring.cloud.consul.discovery.health-check-interval=${CONSUL_HEALTH_CHECK_INTERVAL:30s}
# Spring Cloud Gateway Routes

# User Service Route
spring.cloud.gateway.routes[0].id=${USER_SERVICE_ROUTE_ID:userService}
spring.cloud.gateway.routes[0].uri=${USER_SERVICE_ROUTE_URI:lb://user-service}
spring.cloud.gateway.routes[0].predicates[0]=Path=${USER_SERVICE_PATH:/users/**}
spring.cloud.gateway.routes[0].filters[0]=PreserveHostHeader
spring.cloud.gateway.routes[0].filters[1]=StripPrefix=${STRIP_PREF:0}

# Creator Service Route
spring.cloud.gateway.routes[1].id=${CREATOR_SERVICE_ROUTE_ID:creatorService}
spring.cloud.gateway.routes[1].uri=${CREATOR_SERVICE_ROUTE_URI:lb://creator-service}
spring.cloud.gateway.routes[1].predicates[0]=Path=${CREATOR_SERVICE_PATH:/creator-profiles/**}
spring.cloud.gateway.routes[1].filters[0]=PreserveHostHeader
spring.cloud.gateway.routes[1].filters[1]=StripPrefix=${STRIP_PREF:0}

# Subscription Service Route
spring.cloud.gateway.routes[2].id=${SUBSCRIPTION_SERVICE_ROUTE_ID:subscriptionService}
spring.cloud.gateway.routes[2].uri=${SUBSCRIPTION_SERVICE_ROUTE_URI:lb://subscription-service}
spring.cloud.gateway.routes[2].predicates[0]=Path=${SUBSCRIPTION_SERVICE_PATH:/subscriptions/**}
spring.cloud.gateway.routes[2].filters[0]=PreserveHostHeader
spring.cloud.gateway.routes[2].filters[1]=StripPrefix=${STRIP_PREF:0}

# Post Service Route
spring.cloud.gateway.routes[3].id=${POST_SERVICE_ROUTE_ID:postService}
spring.cloud.gateway.routes[3].uri=${POST_SERVICE_ROUTE_URI:lb://post-service}
spring.cloud.gateway.routes[3].predicates[0]=Path=${POST_SERVICE_PATH:/posts/**}
spring.cloud.gateway.routes[3].filters[0]=PreserveHostHeader
spring.cloud.gateway.routes[3].filters[1]=StripPrefix=${STRIP_PREF:0}

# Media Service Route
spring.cloud.gateway.routes[4].id=${MEDIA_SERVICE_ROUTE_ID:mediaService}
spring.cloud.gateway.routes[4].uri=${MEDIA_SERVICE_ROUTE_URI:lb://media-service}
spring.cloud.gateway.routes[4].predicates[0]=Path=${MEDIA_SERVICE_PATH:/media/**}
spring.cloud.gateway.routes[4].filters[0]=PreserveHostHeader
spring.cloud.gateway.routes[4].filters[1]=StripPrefix=${STRIP_PREF:0}

# CORS Debug and Prevention of header stripping of responses
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security.web.access=DEBUG
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Origin REPLACE
spring.cloud.gateway.default-filters[1]=PreserveHostHeader=true

# Engagement Service Route
spring.cloud.gateway.routes[5].id=${ENGAGEMENT_SERVICE_ROUTE_ID:engagementService}
spring.cloud.gateway.routes[5].uri=${ENGAGEMENT_SERVICE_ROUTE_URI:lb://engagement-service}
spring.cloud.gateway.routes[5].predicates[0]=Path=${ENGAGEMENT_SERVICE_LIKE_PATH:/engagements/**}
spring.cloud.gateway.routes[5].filters[0]=PreserveHostHeader


# Email Notification Service Route
spring.cloud.gateway.routes[6].id=${EMAIL_NOTIFICATION_SERVICE_ROUTE_ID:emailNotificationService}
spring.cloud.gateway.routes[6].uri=${EMAIL_NOTIFICATION_SERVICE_ROUTE_URI:lb://email-notification-service}
spring.cloud.gateway.routes[6].predicates[0]=Path=${EMAIL_NOTIFICATION_SERVICE_PATH:/email/**}
spring.cloud.gateway.routes[6].filters[0]=PreserveHostHeader